<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2024-06-03T18:37:17+08:00</updated><id>/feed.xml</id><title type="html">Bitdevs SG</title><subtitle>BitDevs is a community for those interested in discussing and participating in the research and development of Bitcoin and related protocols.</subtitle><entry><title type="html">Socratic Seminar 3</title><link href="/2024-05-31-socratic-seminar-3.html" rel="alternate" type="text/html" title="Socratic Seminar 3" /><published>2024-05-31T00:00:00+08:00</published><updated>2024-05-31T00:00:00+08:00</updated><id>/socratic-seminar-3</id><content type="html" xml:base="/2024-05-31-socratic-seminar-3.html">&lt;p&gt;We will start with introductions, some basic ground rules, and jump into technical discussions. We will cover aspects of the bitcoin protocol, new research developments, recent news, and software developments.&lt;/p&gt;
&lt;h1 id=&quot;announcements&quot;&gt;Announcements&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;No pictures or recordings&lt;/li&gt;
  &lt;li&gt;Thank you &lt;a href=&quot;https://www.ogbc.com/&quot;&gt;OGBC&lt;/a&gt; and &lt;a href=&quot;https://www.lnfi.network&quot;&gt;Lnfi Network&lt;/a&gt; for sponsorship of the event space and pizzas&lt;/li&gt;
  &lt;li&gt;Introductions
    &lt;h1 id=&quot;agenda&quot;&gt;Agenda&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;Prelude on Covenants - Darius&lt;/li&gt;
  &lt;li&gt;Industry Updates - Darius&lt;/li&gt;
  &lt;li&gt;Covenants and Restoring Scripts - Brandon (video conf)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;prelude-on-covenants&quot;&gt;&lt;u&gt;Prelude on Covenants&lt;/u&gt;&lt;/h1&gt;
&lt;h3 id=&quot;limited-expressivity-in-bitcoin-scripts&quot;&gt;Limited expressivity in Bitcoin Scripts&lt;/h3&gt;
&lt;h4 id=&quot;what-it-can-do&quot;&gt;What it can do:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Rearrange the stack, check for equality, branch on stack values&lt;/li&gt;
  &lt;li&gt;Limited arithmetic 32-bit numbers: add and substract&lt;/li&gt;
  &lt;li&gt;Hash and check ECDSA/Schnorr signatures
    &lt;h4 id=&quot;what-it-cannot-do&quot;&gt;What it cannot do:&lt;/h4&gt;
  &lt;/li&gt;
  &lt;li&gt;No &lt;strong&gt;loops&lt;/strong&gt;, goto, recursion (not turing-complete)&lt;/li&gt;
  &lt;li&gt;No &lt;strong&gt;bitwise&lt;/strong&gt; operations&lt;/li&gt;
  &lt;li&gt;No arithmetic opcodes to do multiplication or division&lt;/li&gt;
  &lt;li&gt;No &lt;strong&gt;concatenation&lt;/strong&gt; of elements on the stack&lt;/li&gt;
  &lt;li&gt;No way to &lt;strong&gt;introspect&lt;/strong&gt; transactions (e.g. cannot access transaction amounts), or to carry over state from tx output to tx output
    &lt;h4 id=&quot;history&quot;&gt;History&lt;/h4&gt;
  &lt;/li&gt;
  &lt;li&gt;We used to have some of these opcodes but its disabled by Satoshi back in 2010 due to inherent vulnerabilities. One of which is OP_CAT which concatenates two stack elements could have been used to remotely crash a Bitcoin node (resource exhaustion attacks).&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;what-are-covenants&quot;&gt;What are Covenants?&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Covenants&lt;/strong&gt; enforce constraints on how transactions (UTXOs) are spent in the future, extending the existing Bitcoin Script capabilities&lt;/li&gt;
  &lt;li&gt;It opens up this capability of creating huge and complex contracts directly on Bitcoin with most this logic being pre-computed off-chain only executing when needing to on the chain.&lt;/li&gt;
  &lt;li&gt;This allows users to commit a set of pre-defined spending conditions that we can then create crazy things like payment trees, payment pools and smart vaults and these improve Bitcoin’s, Lightning’s and UTXO’s scalability and privacy.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-key-covenants-proposal&quot;&gt;3 Key Covenants Proposal&lt;/h1&gt;
&lt;h4 id=&quot;op_checktemplateverify-ctv-bip-119&quot;&gt;OP_CHECKTEMPLATEVERIFY (CTV) (BIP-119)&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;If you are using CTV your transaction must have a template that matches the previously set template, the spending conditions must be met. Once applied these contracts cannot be changed by anyone, they allow for provably trustless sharing of UTXOs.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Shared UTXOs&lt;/strong&gt; (Lightning Network’s channel is already allowing sharing of UTXO between two parties with a 2/2 multi-sig)
    &lt;ul&gt;
      &lt;li&gt;Payment Tree and Payment Pools&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Channel factory&lt;/strong&gt; (batched channels) with m-out-of-n multi-sig channel&lt;/li&gt;
      &lt;li&gt;Without shared UTXOs, the planet just doesn’t have enough computing power for everybody to have their own UTXOs. This also comes with privacy benefits, as many people will share a single footprint on L1.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;op_cat-bip-420&quot;&gt;OP_CAT (BIP-420)&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Takes two pieces of data on the stack and adds them together to form one.&lt;/li&gt;
  &lt;li&gt;Not that harmful in today’s context there is a stack limit of 520 bytes&lt;/li&gt;
  &lt;li&gt;10 lines of code implementation&lt;/li&gt;
  &lt;li&gt;[ 0xBE, 0xEF ] –&amp;gt; [ 0xBEEF ]&lt;/li&gt;
  &lt;li&gt;Can be used for:
    &lt;ul&gt;
      &lt;li&gt;Arithmetic opcodes to do multiplication or division&lt;/li&gt;
      &lt;li&gt;Transaction introspection and state (e.g. access transaction amounts in script)&lt;/li&gt;
      &lt;li&gt;Verification of Merkle proof&lt;/li&gt;
      &lt;li&gt;Verify SNARKs in script (but the size still too big to be put into a script)&lt;/li&gt;
      &lt;li&gt;CATVM and Drivechains&lt;/li&gt;
      &lt;li&gt;… and more&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;lnhance--op_ctv--op_csfs--op_internalkey&quot;&gt;LNHANCE = OP_CTV + OP_CSFS + OP_INTERNALKEY&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Proposed by Brandon&lt;/li&gt;
  &lt;li&gt;MOST of the code is CTV, but adds just enough to enable additional interesting protocols (e.g. Lightning Symmetry, simplified PTLC scripts, rebindable pre-signed vaults)&lt;/li&gt;
  &lt;li&gt;Why LNHANCE?
    &lt;ul&gt;
      &lt;li&gt;You get almost everything of CTV, APO, TXHASH and … many more with much less code and much more guarantee and much more efficiency&lt;/li&gt;
      &lt;li&gt;This combination provides a bit more flexibility and programmability than just OP_CTV alone, and enables extra things such as LN symmetry/eltoo.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;eltoo (also called LN-Symmetry)&lt;/strong&gt; allowing a latest channel state  to replace an earlier channel state without requiring a penalty. Greater efficiency and more friendly: LN nodes using eltoo only need to store the latest state (only a few kilobytes). For certain devices that lack large amounts of persistent storage (for example, hardware wallets), they may not be able to store enough data to effectively use penalty-based LN—but as long as they can store a few kB, they should be able to use eltoo-based LN.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;great-script-restoration&quot;&gt;Great Script Restoration&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;CTV, APO, LNHANCE, TXHASH, CCV, VAULT, etc. have failed to gain consensus because they are variously framed by both what they do enable and what they deliberately avoid enabling (e.g. CTV and LNHANCE avoid enabling Drivechains, but do enable coinpools and lightning symmetry respectively). This has resulted in in-fighting with everyone wanting to enable their thing, but still trying to avoid enabling some other thing. Two things that everyone wants to avoid enabling:
    &lt;ul&gt;
      &lt;li&gt;avoid enabling turing complete scripts (to ensure that we can statically analyze all scripts)&lt;/li&gt;
      &lt;li&gt;avoid enabling anything that can increase validation costs for nodes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Nothing is comprehensive enough for anyone to think, outside of the proposal originator, that it is the sensible next move forward.&lt;/li&gt;
  &lt;li&gt;This is where the &lt;a href=&quot;https://bitcoinmagazine.com/technical/the-great-script-restoration-a-path-forward-for-bitcoin&quot;&gt;&lt;strong&gt;Great Script Restoration&lt;/strong&gt;&lt;/a&gt; comes in. Its a toolkit for developers to advocating for and analyzing the comprehensive restoration of scripts, just as Satoshi Nakamoto originally designed, we can actually attempt to explore the entire functional space we need, rather than debating and quarreling over which small feature extension is good enough for now.&lt;/li&gt;
  &lt;li&gt;How we improve bitcoin is by engineering the best version of script that we can. What this enables is any developer to validate their contracts on bitcoin as long as they don’t unfairly burden nodes (i.e. their validation cost per byte doesn’t exceed that of checksig).&lt;/li&gt;
  &lt;li&gt;By &lt;strong&gt;varops limit&lt;/strong&gt;. The idea is to assign a cost for each of the reactivated opcodes to take into account the worst case, i.e. most expensive computational cost to validate, that each opcode could create. With this, every one of these opcodes would have its own limit of sorts to restrain how many resources it could consume in verification. It would also be based on the size of any transaction using them, so maintain the ease of reasoning about it, while still adding up to an implicit global limit per block.&lt;/li&gt;
  &lt;li&gt;This would solve the denial of service risks that caused Satoshi to disable all of these opcodes in the first place.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;industry-updates&quot;&gt;&lt;u&gt;Industry Updates&lt;/u&gt;&lt;/h1&gt;

&lt;h1 id=&quot;bitcoin&quot;&gt;Bitcoin&lt;/h1&gt;
&lt;h4 id=&quot;the-halving&quot;&gt;The halving&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://x.com/mononautical/status/1783528618720727288&quot;&gt;&lt;strong&gt;ViaBTC’s total reward for the halving block of &amp;gt;74BTC&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jimmysong.medium.com/halving-fee-chaos-4573b3c8bc9f&quot;&gt;&lt;strong&gt;Halving Chaos&lt;/strong&gt;&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Runes have resulted in some really high fees&lt;/li&gt;
      &lt;li&gt;Just in the first 18 blocks, there’s been over $20M in fees spent, most of that in Runes issuance.&lt;/li&gt;
      &lt;li&gt;there is a deeper cost in terms of block space congestion, where fees of 1000 sats/vbyte are currently not enough to get into certain blocks.
        &lt;h4 id=&quot;reducing-bitcoin-blocksize-limit-from-4mb-to-300kbs&quot;&gt;&lt;a href=&quot;https://x.com/BTCtoOblivion/status/1794560100926902673&quot;&gt;&lt;strong&gt;Reducing Bitcoin blocksize limit from 4mb to 300kbs&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Existing blocks are filled with spam –&amp;gt; higher node running costs&lt;/li&gt;
  &lt;li&gt;Debate on reducing blocksize limit to 300kbs to:
    &lt;ul&gt;
      &lt;li&gt;keep cost of running nodes low (more nodes –&amp;gt; high decentralisation)&lt;/li&gt;
      &lt;li&gt;promote scalability in L2s, L3s instead of onchain scaling&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;bitvmx-a-virtual-cpu-to-optimistically-execute-arbitrary-programs-on-bitcoin&quot;&gt;&lt;a href=&quot;https://groups.google.com/g/bitcoindev/c/8IJS0WK_Cp4&quot;&gt;BitVMX: A Virtual CPU to optimistically execute arbitrary programs on Bitcoin&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;developed by @RootstockLabs &amp;amp; @FairGateLabs&lt;/li&gt;
  &lt;li&gt;an enhanced, pragmatic upgrade to the BitVM computing paradigm that could make BitVM faster, more efficient, and easier for developers to implement.&lt;/li&gt;
  &lt;li&gt;Both BitVM and BitVMX work in a similar way to Optimistic Roll Ups on Ethereum. As in - they allow computation to be ~verified~ on Bitcoin instead of ~executed~ on Bitcoin. This means - no hard forks required. It all works within the constraints that Bitcoin provides.&lt;/li&gt;
  &lt;li&gt;The team at RootstockLabs approached this with a simple question: how could we use BitVM to build better bridges to Bitcoin? And do this in a way that is much more computationally efficient, and therefore more suitable for the practical needs of a Bitcoin side chain.&lt;/li&gt;
  &lt;li&gt;Where BitVMX enhances BitVM is in the amount of pre-computation required, the transaction space consumed, and more importantly, the complexity of the solution.&lt;/li&gt;
  &lt;li&gt;Now, in theory, BitVMX could be used to run anything on Bitcoin - even Linux. But we expect the most likely and most obvious early use cases are:
    &lt;ul&gt;
      &lt;li&gt;building aggregator oracles to collect, verify, and store data on Bitcoin&lt;/li&gt;
      &lt;li&gt;running SNARK or STARK verifiers that could be used to store and automate fund distribution on Bitcoin, and&lt;/li&gt;
      &lt;li&gt;Building bridges between Bitcoin and sidechains like Rootstock instead of 2WayPeg&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;utreexod-beta-release&quot;&gt;&lt;a href=&quot;https://groups.google.com/g/bitcoindev/c/5GyV9af9lv4&quot;&gt;Utreexod beta release&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Utreexo is a novel method for managing the Bitcoin UTXO (Unspent Transaction Output) set, designed to make Bitcoin nodes more efficient. The UTXO set is a collection of all unspent transaction outputs, which is crucial for validating transactions in the Bitcoin network. As Bitcoin grows, the UTXO set becomes larger, making it more resource-intensive for nodes to maintain.&lt;/li&gt;
  &lt;li&gt;Utreexo introduces a cryptographic accumulator to represent the UTXO set in a compact form. This approach significantly reduces the storage requirements for full nodes. Here’s a breakdown of key concepts:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Accumulator:&lt;/strong&gt; A data structure that allows for the compact representation of a large set of data. In Utreexo, it enables the representation of the entire UTXO set in a very small size.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Proofs:&lt;/strong&gt; When a transaction spends a UTXO, it provides a proof that the UTXO exists in the accumulator. This proof can be efficiently verified.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Efficiency:&lt;/strong&gt; Utreexo reduces the storage requirements for full nodes, making it possible to run a full node on devices with limited storage capacity, like smartphones or small computers.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Improved Deletion Algorithm:&lt;/strong&gt; The deletion algorithm in Utreexo allows for efficient removal of spent UTXOs from the accumulator.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Utreexod, a full node implementation that incorporates Utreexo accumulators.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Utreexo Accumulators:&lt;/strong&gt; Utreexod implements Utreexo accumulators with an improved deletion algorithm. This allows for efficient handling of the UTXO set, reducing storage requirements.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Efficient P2P Transaction Relay:&lt;/strong&gt; The node supports efficient peer-to-peer (P2P) transaction relay by caching Utreexo proofs for transactions in the mempool (a pool of pending transactions).&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Quick Sync:&lt;/strong&gt; Utreexod includes a feature called AssumeUtreexo which allows for rapid synchronization to the current tip of the blockchain.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Built-in Wallet Support:&lt;/strong&gt; The node comes with built-in wallet support via the Bitcoin Development Kit (BDK), facilitating seamless wallet operations.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Electrum Personal Server Support:&lt;/strong&gt; This feature allows Utreexod to work with other wallets that use Electrum, a popular lightweight Bitcoin wallet.
        &lt;h4 id=&quot;dlcs-vs-l2-vs-archs-native-zkvm&quot;&gt;&lt;a href=&quot;https://x.com/bonomat/status/1790319800650186831&quot;&gt;DLCs vs L2 vs Arch’s native zkVM&lt;/a&gt;&lt;/h4&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DLC Oracle &lt;strong&gt;can be decentralised&lt;/strong&gt; by having a quorum of oracles&lt;/li&gt;
  &lt;li&gt;DLCs &lt;strong&gt;support all tokens&lt;/strong&gt; (native/non-native) as DLCs work with UTXOs and anything that can be transferred in an UTXO can be used in a DLC.&lt;/li&gt;
  &lt;li&gt;DLC has &lt;strong&gt;less programmability&lt;/strong&gt; than L2 or Arch which can run a turing complete VM&lt;/li&gt;
  &lt;li&gt;DLCs can be &lt;strong&gt;composed&lt;/strong&gt;: you can spend one DLC into another. Using @get10101’s DLC-channels you can even settle all of the DLCs off-chain without having to go on-chain.&lt;/li&gt;
  &lt;li&gt;DLCs are permissionless as no one’s permission is required. DLCs are discreet in the sense that no external observer can learn its existence or details from the public ledger.
    &lt;h4 id=&quot;microstrategy-orange&quot;&gt;&lt;a href=&quot;https://bitcoinmagazine.com/business/microstrategy-announces-decentralized-id-platform-on-bitcoin-called-microstrategy-orange&quot;&gt;MicroStrategy Orange&lt;/a&gt;&lt;/h4&gt;
  &lt;/li&gt;
  &lt;li&gt;MicroStrategy Orange, which is an an enterprise platform for building decentralized identity applications on the Bitcoin blockchain&lt;/li&gt;
  &lt;li&gt;“Custodial or non-custodial, the obvious thing is every Bitcoin wallet out there should incorporate the capability of creating a Bitcoin based digital identity. Many messaging platforms suffer from the same challenges that email does. When you get a text message, how do you know the person who sent you the text message…We would want to include an orange check for these different messaging platforms.”&lt;/li&gt;
  &lt;li&gt;“Where I can now credential my identity anchored to Bitcoin — with a university degree, with a course certification issued by a hyperscaler, with your medical record and present those and have those verified all in a decentralized way. But with the ultimate identity living and being anchored to the Bitcoin blockchain.”&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;alpen---introducing-snarknado&quot;&gt;&lt;a href=&quot;https://www.alpenlabs.io/blog/snarknado-practical-round-efficient-snark-verifier-on-bitcoin&quot;&gt;Alpen - Introducing SNARKnado&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;BitVM&lt;/strong&gt;: Introduced by Robin Linus, BitVM is a permissioned bisection protocol enabling optimistic verification of arbitrary computations on Bitcoin, using a RISC-V virtual machine. However, it has two main shortcomings:
    &lt;ul&gt;
      &lt;li&gt;Only a predetermined set of parties can initiate a challenge.&lt;/li&gt;
      &lt;li&gt;The bisection protocol can take a long time, potentially over half a year.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;BitVM2&lt;/strong&gt;: Aims to allow permissionless challenging and reduces the number of rounds by not using bisection, but it faces significant practical challenges and high onchain costs.&lt;/li&gt;
  &lt;li&gt;SNARKnado replaces the RISC-V abstraction of BitVM with a protocol based on Polynomial Interactive Oracle Proofs (PIOPs), specifically using PLONK, a popular SNARK construction. This results in a more efficient bisection protocol, reducing the number of rounds needed for verification.&lt;/li&gt;
  &lt;li&gt;SNARKnado serves as an intermediate protocol between BitVM and BitVM2. While BitVM2 aims for permissionless challenging, SNARKnado’s structure can inform and improve BitVM2 implementations.&lt;/li&gt;
  &lt;li&gt;SNARKnado offers over an &lt;strong&gt;eight-fold improvement&lt;/strong&gt; in bisection rounds compared to BitVM, estimating the number of rounds to four. However, it &lt;strong&gt;does not support permissionless challenging like BitVM2&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;lightning&quot;&gt;Lightning&lt;/h1&gt;
&lt;h4 id=&quot;taproot-assets-channel---first-mainnet-asset-swap&quot;&gt;&lt;a href=&quot;https://x.com/roasbeef/status/1791171395336192174&quot;&gt;Taproot Assets Channel - First Mainnet Asset Swap&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://assets-global.website-files.com/62f8cf6b2a4c4e15363f6493/64a32becc59e13976d8db972_spaces2F-MIzyiDsFtJBYVyhr1nT2Fuploads2F5YUmQvbKYMvannBLtsLt2FGroup2038812-p-1600.png&quot; alt=&quot;Taproot Assets on Lightning | 1500&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Zane -[$beefbux channel]-&amp;gt; Yara -[$BTC  Channel]-&amp;gt; Carol&lt;/li&gt;
  &lt;li&gt;Zane is able to pay Carol’s BTC invoice by swapping his $beefbux for $BTC on the fly using the edge RFQ forwarding+negotiation system!&lt;/li&gt;
  &lt;li&gt;Asset-to-asset transfer: Carol can receive in any Taproot Assets /  $BTC while Zane can send in any Taproot Assets / $BTC&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;how-to-make-use-of-bolt12-in-ldk&quot;&gt;&lt;a href=&quot;https://lightningdevkit.org/blog/bolt12-has-arrived/&quot;&gt;How to Make Use of BOLT12 in LDK&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Jeff Czyz from Lightning Dev Kit wrote a walkthrough on BOLT12, explaining what it is and how one can make use of it in LDK.&lt;/p&gt;

&lt;p&gt;“BOLT12 is a new payment protocol for Lightning that offers enhanced privacy, reusable payment codes, refunds, and much more, all natively over the Lightning Network.” No additional servers are required. This is all possible using new technologies like onion messages and route blinding. BOLT12 specification defines “an offer that can be considered a precursor to an invoice. It contains less data than an invoice and is smaller to display as a QR code. Optionally, it may contain blinded paths—more on that in a moment. Someone scanning an offer sends an invoice request to the intended recipient, who replies with an invoice containing a unique payment hash.”&lt;/p&gt;

&lt;h4 id=&quot;announcing-lnd-018-smarter-sweeps-inbound-fees-and-improved-scaling-&quot;&gt;&lt;a href=&quot;https://x.com/lightning/status/1796235510144540835&quot;&gt;Announcing LND 0.18: Smarter Sweeps, Inbound Fees, and Improved Scaling! &lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Delay Aware Fee Bumping + Sweeping:
    &lt;ul&gt;
      &lt;li&gt;Explanation: This feature aims to optimize the process of fee bumping (increasing the transaction fee to ensure timely inclusion in a block) and sweeping (consolidating small outputs into a single transaction).&lt;/li&gt;
      &lt;li&gt;Impact: Reduces the risk of cascading force closures, where a chain reaction of closing channels could occur due to low fees causing delays.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Prep for the Transaction Version 3 Fee Bumping Policy:
    &lt;ul&gt;
      &lt;li&gt;Explanation: Preparation for upcoming changes in Bitcoin’s transaction version 3, which will include new rules and mechanisms for fee bumping.&lt;/li&gt;
      &lt;li&gt;Impact: Ensures LND is ready for future updates to the Bitcoin protocol, maintaining compatibility and improving fee management.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Experimental Support for Inbound Fees:
    &lt;ul&gt;
      &lt;li&gt;Explanation: Introduces a new traffic shaping option that allows nodes to charge fees for receiving payments, not just sending them.&lt;/li&gt;
      &lt;li&gt;Impact: Provides full nodes with a new way to monetize their services and manage traffic more effectively.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Blinded Paths Forwarding+Sending Support:
    &lt;ul&gt;
      &lt;li&gt;Explanation: Adds support for blinded paths, a privacy feature that conceals the actual route a payment takes across the network.&lt;/li&gt;
      &lt;li&gt;Impact: Enhances privacy for users by preventing the exposure of the entire payment route, making it harder to trace transactions.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Improved Pruned Node and Tor Support:
    &lt;ul&gt;
      &lt;li&gt;Explanation: Enhances compatibility with pruned Bitcoin nodes (nodes that only store a subset of the blockchain) and improves support for Tor, which anonymizes network traffic.&lt;/li&gt;
      &lt;li&gt;Impact: Increases the accessibility and privacy of running an LND node, especially for users with limited storage or who prioritize anonymity.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;First Class Fee Probing (new EstimateRouteFee RPC call):
    &lt;ul&gt;
      &lt;li&gt;Explanation: Introduces a new RPC (Remote Procedure Call) method to estimate the fees for a specific route before actually sending a payment.&lt;/li&gt;
      &lt;li&gt;Impact: Allows users and applications to better plan and optimize their payments by understanding potential fees upfront.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;New Native SQL Schema for Invoices:
    &lt;ul&gt;
      &lt;li&gt;Explanation: Implements a new SQL schema for managing invoices within LND, likely replacing the existing storage method.&lt;/li&gt;
      &lt;li&gt;Impact: Enhances the efficiency and scalability of invoice handling, potentially leading to better performance and more robust data management.
        &lt;h1 id=&quot;usd-ecash&quot;&gt;USD Ecash&lt;/h1&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://x.com/callebtc/status/1777598819355496587&quot;&gt;&lt;strong&gt;First tests of USD Ecash. Backed by BTC&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5DdYR1FebZo&quot;&gt;&lt;strong&gt;Live Demo of Sending Ecash via Cashu&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nobsbitcoin.com/cashu-me-v0-1/&quot;&gt;&lt;strong&gt;Cashu.me v0.1: Modern Ecash Experience in Your Browser&lt;/strong&gt;&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Cashu.me is a Chaumian Ecash wallet for Bitcoin built as a progressive web app (PWA). It is free and open-source software released under the MIT license.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">We will start with introductions, some basic ground rules, and jump into technical discussions. We will cover aspects of the bitcoin protocol, new research developments, recent news, and software developments. Announcements No pictures or recordings Thank you OGBC and Lnfi Network for sponsorship of the event space and pizzas Introductions Agenda Prelude on Covenants - Darius Industry Updates - Darius Covenants and Restoring Scripts - Brandon (video conf)</summary></entry><entry><title type="html">Socratic Seminar 2</title><link href="/2024-03-08-socratic-seminar-2.html" rel="alternate" type="text/html" title="Socratic Seminar 2" /><published>2024-03-08T00:00:00+08:00</published><updated>2024-03-08T00:00:00+08:00</updated><id>/socratic-seminar-2</id><content type="html" xml:base="/2024-03-08-socratic-seminar-2.html">&lt;p&gt;We will start with introductions, some basic ground rules, and jump into technical discussions. We will cover aspects of the bitcoin protocol, new research developments, recent news, and software developments.&lt;/p&gt;
&lt;h1 id=&quot;announcements&quot;&gt;Announcements&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;No pictures or recordings&lt;/li&gt;
  &lt;li&gt;Thank you &lt;a href=&quot;https://www.ogbc.com/&quot;&gt;OGBC&lt;/a&gt; and &lt;a href=&quot;https://www.lnfi.network&quot;&gt;Lnfi Network&lt;/a&gt; for sponsorship of the event space and pizzas&lt;/li&gt;
  &lt;li&gt;Introductions
    &lt;h1 id=&quot;agenda&quot;&gt;Agenda&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;Taproot Channels - YY&lt;/li&gt;
  &lt;li&gt;Industry Updates - Darius&lt;/li&gt;
  &lt;li&gt;Discreet Log Contracts - Darius&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;bitcoin&quot;&gt;Bitcoin&lt;/h1&gt;

&lt;h4 id=&quot;stranded-how-bitcoin-is-saving-wasted-energy-and-expanding-financial-freedom-in-africa&quot;&gt;&lt;a href=&quot;https://bitcoinmagazine.com/check-your-financial-privilege/stranded-bitcoin-saving-wasted-energy-in-africa&quot;&gt;&lt;strong&gt;Stranded: How Bitcoin is saving wasted energy and expanding financial freedom in Africa&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Alex Gladstein has a great article about how Bitcoin Mining greates value for communities by tapping into stranded Energy.&lt;/p&gt;

&lt;h4 id=&quot;bitvm-8-bit-pc&quot;&gt;&lt;a href=&quot;https://x.com/super_testnet/status/1732493052185391160?s=20&quot;&gt;BitVM 8-bit PC&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;“It’s true, you can write bitcoin smart contracts in Assembly now instead of learning boolean logic circuits,” wrote @Super Testnet. Someone also wrote a multiplication function for this virtual CPU.&lt;/p&gt;

&lt;h4 id=&quot;utxo-arbitrage-by-magic-eden-on-coinbase&quot;&gt;&lt;a href=&quot;https://twitter.com/mononautical/status/1758262223456162279?s=46&amp;amp;t=WMmqJ4MdyeBHjVDNEbJ-rg&quot;&gt;UTXO Arbitrage by Magic Eden on Coinbase&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;For every marketplace purchase on Magic Eden, they include a tiny output (UTXO) for the marketplace fee. These are typically tiny outputs, 1000 sats, 2000 sats, etc. A pain in the butt to consolidate some day. Each of these costs money to spend.&lt;/li&gt;
  &lt;li&gt;The genius move is that instead of using their own address to receive these utxos, they are using their Coinbase account address. So all these deposits just get credited to Magic Eden’s Coinbase account, and Coinbase is responsible for paying the fees to consolidate them.&lt;/li&gt;
  &lt;li&gt;Since Magic Eden started using this address in early December ‘23, Coinbase has paid 65.16 BTC* to consolidate 183,743 inputs worth 140.30 BTC.&lt;/li&gt;
  &lt;li&gt;For 110,444 of those (worth 12.30 BTC), the fees paid actually exceeded the value of the inputs, leading to a dead loss of 34 BTC.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;64-bit-arithmetic-soft-fork&quot;&gt;64-bit Arithmetic Soft Fork&lt;/h4&gt;
&lt;p&gt;This BIP (Bitcoin Improvement Proposal) proposes the addition of new arithmetic opcodes to the Bitcoin protocol to enable 64-bit signed integer math operations directly within Bitcoin scripts. These new opcodes include:&lt;/p&gt;

&lt;p&gt;OP_ADD64: Adds two 64-bit signed integers.
OP_SUB64: Subtracts one 64-bit signed integer from another.
OP_MUL64: Multiplies two 64-bit signed integers.
OP_DIV64: Divides one 64-bit signed integer by another.
OP_NEG64: Negates a 64-bit signed integer.
OP_LESSTHAN64: Compares two 64-bit signed integers to check if the first is less than the second.
OP_LESSTHANOREQUAL64: Compares two 64-bit signed integers to check if the first is less than or equal to the second.
OP_GREATERTHAN64: Compares two 64-bit signed integers to check if the first is greater than the second.
OP_GREATERTHANOREQUAL64: Compares two 64-bit signed integers to check if the first is greater than or equal to the second.
These opcodes enable more complex arithmetic and comparison operations to be performed within Bitcoin scripts, which can be useful for implementing advanced smart contracts and applications on the Bitcoin blockchain.&lt;/p&gt;

&lt;p&gt;Additionally, the BIP proposes a set of conversion opcodes to facilitate the conversion of existing Bitcoin protocol numbers, known as CScriptNums, into 4 and 7-byte little-endian representations. These conversion opcodes include:&lt;/p&gt;

&lt;p&gt;OP_SCRIPTNUMTOLE64: Converts a CScriptNum to a 7-byte little-endian representation.
OP_LE64TOSCRIPTNUM: Converts a 7-byte little-endian representation to a CScriptNum.
OP_LE32TOLE64: Converts a 4-byte little-endian representation to a 7-byte little-endian representation.
These conversion opcodes are useful for interoperability between existing Bitcoin protocol numbers and the new 64-bit signed integer arithmetic operations proposed by the BIP. They ensure that data can be converted and manipulated consistently within Bitcoin scripts, maintaining compatibility with existing protocol standards while expanding functionality.&lt;/p&gt;

&lt;p&gt;https://github.com/bitcoin/bips/pull/1538
https://github.com/bitcoin/bitcoin/pull/29221
https://delvingbitcoin.org/t/64-bit-arithmetic-soft-fork/397
Credit: Andrew Poelstra, Sanket Kanjalkar, Chris Stewart&lt;/p&gt;

&lt;h4 id=&quot;mempool-incentive-compatibility&quot;&gt;&lt;a href=&quot;https://delvingbitcoin.org/t/mempool-incentive-compatibility/553&quot;&gt;Mempool Incentive Compatibility&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;The post provides an in-depth exploration of incentive compatibility in the context of Bitcoin mempool management, particularly focusing on the ordering of transactions to maximize fees. It discusses various scenarios, motivations, and challenges associated with selecting transactions for inclusion in blocks, considering factors such as fee rates, block size constraints, topology requirements, and transaction dependencies.&lt;/p&gt;

&lt;h1 id=&quot;lightning&quot;&gt;Lightning&lt;/h1&gt;

&lt;h4 id=&quot;btcpayserver---lnbank-plugin-exploit&quot;&gt;&lt;a href=&quot;https://stacker.news/items/347361?ref=nobsbitcoin.com&quot;&gt;BTCPayServer - LNBank Plugin Exploit&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;BTCPay ServerBTCPay Server is a self-hosted, open-source cryptocurrency payment processor.&lt;/li&gt;
  &lt;li&gt;LNbank is a plugin for BTCPay Server to use the internal Lightning node in custodial mode: It allows server admins to open up the Lightning node and give users access via custodial layer 3 wallets.&lt;/li&gt;
  &lt;li&gt;What happened?
    &lt;ul&gt;
      &lt;li&gt;From the BTCPay server the attackers were able to send payments to Bitlifi (CEX) wallet using the LNbank API&lt;/li&gt;
      &lt;li&gt;The BTCPay server is connected to victim’s LN node, which sent all the payments using different routes/channels but always ending the transaction on CEX’s node ln-1.anycoin.cz.&lt;/li&gt;
      &lt;li&gt;The attack stopped at 21:02h UTC when victim understood what was happening and shutdown the servers where BTCPay server and the LN node are running.&lt;/li&gt;
      &lt;li&gt;The final amount of BTC transferred from victim node to CEX node was evaluated to be ~4BTC&lt;/li&gt;
      &lt;li&gt;All funds were then transferred out of CEX node&lt;/li&gt;
      &lt;li&gt;List of accounts created at the BTCPay server and all the information related to the attackers were exposed for CEX’s further investigation with the KYC’ed information but they choose not to do anything&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;LNbank dev admitted that there is a bug and urge everyone to update to v1.8.9 as soon as possible.&lt;/li&gt;
  &lt;li&gt;Note: This is a form of hot wallet risk. Software running on lightning nodes often have full control of the node in question which means any vulnerability found in that software can be used to steal balances. Recommend to be careful of what apps to run, and secure authentication token files properly (LND uses special cookies called macaroons)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;liquidity-on-lightning-moving-from-ux-to-economix-&quot;&gt;&lt;a href=&quot;https://medium.com/breez-technology/liquidity-on-lightning-moving-from-ux-to-economix-6e597d9e1abd&quot;&gt;Liquidity on Lightning: Moving from UX to Economix &lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;By Roy Sheineld, Breez Technology&lt;/li&gt;
  &lt;li&gt;The discussion delves into the evolution of liquidity on the Lightning Network, emphasizing the role of Lightning Service Providers (LSPs) in addressing technical challenges and promoting its transition into a thriving financial network. It outlines the constraints and opportunities faced by LSPs, such as volatile on-chain transaction fees, and highlights strategies to enhance their viability, including optimizing the lifetime value to customer acquisition cost ratio (LTV/CAC). The article also explores broader constraints and opportunities for Lightning as a whole, underscoring its potential to significantly increase Bitcoin’s throughput while adapting to various parameters and local conditions. Ultimately, it emphasizes the importance of embracing constraints as natural and integral to the maturation process of Lightning and the broader transition to a bitcoin economy.&lt;/li&gt;
  &lt;li&gt;Note: Breez offers Lightning as a Service which enables developers to integrate Lightning and bitcoin payments into their apps and services with a very shallow learning curve. The use cases are endless – from social apps that want to integrate tipping between users to fintech services interested in adding bitcoin solutions. Crucially, this SDK is an end-to-end, non-custodial, drop-in solution powered by Greenlight, a built-in liquidity provider, on-chain interoperability, third-party fiat on-ramps, and other services users and operators need.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;discrete-log-contracts&quot;&gt;Discrete Log Contracts&lt;/h4&gt;

&lt;p&gt;Discreet Log Contracts (DLCs) are a type of smart contract protocol that operates on the Bitcoin blockchain, allowing for the execution and settlement of contracts based on events external to the blockchain.&lt;/p&gt;

&lt;p&gt;During the setup of a DLC both parties lock up funds in a DLC output. This output can only be spent with signatures from both parties. At the time of the DLC setup the actual event outcome is not know yet, but the oracle has announced that it will attest to its outcome at a specific point in the future. Both parties generate multiple CETs, each defining how to split up the locked up funds based on a specific potential future event outcome. After agreeing on the CETs, both parties exchange adaptor signatures on each of them. An adaptor signature for any given CET will only be unlocked if the oracle attests to the specific event outcome associated with the corresponding CET.&lt;/p&gt;

&lt;p&gt;The key characteristics of a CET are the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Only one CET will become valid after the attestation of one or multiple oracles.&lt;/li&gt;
  &lt;li&gt;Neither party can publish a valid CET without having the oracle’s attestation.&lt;/li&gt;
  &lt;li&gt;Publishing a CET is unilateral after the oracle’s attestation.&lt;/li&gt;
  &lt;li&gt;The most simple example of a DLC is a binary option. The diagram below illustrates the transaction structure of such a DLC. As the potential future event outcomes can only be true or false, only two CETs have to be generated.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://10101.finance/assets/images/binary_dlc-9ab42cff6edd3fcdd312f8f920328e0c.png&quot; alt=&quot;Discrete Log Contracts&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">We will start with introductions, some basic ground rules, and jump into technical discussions. We will cover aspects of the bitcoin protocol, new research developments, recent news, and software developments. Announcements No pictures or recordings Thank you OGBC and Lnfi Network for sponsorship of the event space and pizzas Introductions Agenda Taproot Channels - YY Industry Updates - Darius Discreet Log Contracts - Darius</summary></entry><entry><title type="html">Socratic Seminar 1</title><link href="/2024-01-29-socratic-seminar-1.html" rel="alternate" type="text/html" title="Socratic Seminar 1" /><published>2024-01-29T00:00:00+08:00</published><updated>2024-01-29T00:00:00+08:00</updated><id>/socratic-seminar-1</id><content type="html" xml:base="/2024-01-29-socratic-seminar-1.html">&lt;p&gt;Join our Telegram Group:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://i.ibb.co/2d4ncjx/Telegram-QR.png&quot;&gt;TelegramQR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will start with introductions, some basic ground rules, and jump into technical discussions. We will cover aspects of the bitcoin protocol, new research developments, recent news, and software developments.&lt;/p&gt;
&lt;h1 id=&quot;announcements&quot;&gt;Announcements&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;No pictures or recordings&lt;/li&gt;
  &lt;li&gt;Thank you &lt;a href=&quot;https://www.ogbc.com/&quot;&gt;OGBC&lt;/a&gt; for sponsorship of the event space&lt;/li&gt;
  &lt;li&gt;Introductions
    &lt;h1 id=&quot;agenda&quot;&gt;Agenda&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;[[Lightning Network (from Bitcoin University)]] - Darius&lt;/li&gt;
  &lt;li&gt;Taproot Assets Protocol - Luke&lt;/li&gt;
  &lt;li&gt;Bitcoin News&lt;/li&gt;
  &lt;li&gt;Opening Address - BitDevs NYC Founder&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;bitcoin&quot;&gt;Bitcoin&lt;/h1&gt;
&lt;h4 id=&quot;scaling-lightning-safely-with-feerate-dependent-timelocks&quot;&gt;&lt;a href=&quot;https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022191.html&quot;&gt;Scaling Lightning Safely With Feerate-Dependent Timelocks&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;All known Lightning channel and factory protocols are susceptible to forced expiration spam attacks, in which an attacker floods the blockchain with transactions in order to prevent honest users from putting their transactions onchain before timelocks expire.&lt;/li&gt;
  &lt;li&gt;Feerate-Dependent Timelocks (FDTs) are timelocks that automatically extend when blockchain feerates spike.
    &lt;ul&gt;
      &lt;li&gt;In the normal case, there’s no spike in feerates and thus no tradeoff between capital efficiency and safety.&lt;/li&gt;
      &lt;li&gt;If a dishonest user attempts a forced expiration spam attack, feerates increase and FDTs are extended, thus penalizing the attacker by keeping their capital timelocked for longer.&lt;/li&gt;
      &lt;li&gt;FDTs are tunable and can be made to be highly resistant to attacks from dishonest miners.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Of separate interest, an exact analysis of the risk of double spend attacks is presented that corrects an error in the original Bitcoin whitepaper.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;addressing-the-possibility-of-profitable-fee-manipulation-attacks&quot;&gt;&lt;a href=&quot;https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022195.html&quot;&gt;Addressing the possibility of profitable fee manipulation attacks&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;The article considers “the possibility that such patterns could be indicative of ongoing fee manipulation by either a large miner or a consortium of miners, and whether such manipulation could be practically profitable, even with a minority hashrate.  While miners have always had the ability to pad their own blocks with junk transactions, it seems to be generally assumed that at the very least there would be an opportunity cost of doing so, and that it would therefore would be unprofitable.”&lt;/li&gt;
  &lt;li&gt;“during periods of low mempool influx like early mornings on weekends, there tends to be large bursts (often several hundred kvB worth) of tiny ordinals/BRC-20 transactions with a single dust UTXO broadcast right after each block is found, with a fee set moderately higher than the current average of the top of the mempool, which makes it highly likely that this is done by a single actor.”&lt;/li&gt;
  &lt;li&gt;“Simply put, and trivially, such an attack would be profitable if the net fees the participating miners spend on fee-stuffing transactions is less than the increase in fees the participating miners can collect from “real” transactions.”&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;lightning&quot;&gt;Lightning&lt;/h1&gt;

&lt;h4 id=&quot;rethinking-lightning&quot;&gt;Rethinking Lightning&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://stacker.news/benthecarman&quot;&gt;Ben Carman&lt;/a&gt; wrote a thorough and realistic &lt;a href=&quot;https://stacker.news/items/379225&quot;&gt;stacker news post&lt;/a&gt; examining the shortcomings of the lightning network.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Two key problems: offline receiving and channel liquidity&lt;/li&gt;
  &lt;li&gt;**Channel liquidity: **when a payment is being made in lightning you are creating pre-signed transactions that have outputs for every in-flight payment, these outputs cost potential on-chain fees and the high on-chain fees go the more it eats into your liquidity.&lt;/li&gt;
  &lt;li&gt;Carman explains that the fundamental scaling problem with lightning is that it only scales payments but not UTXO ownership. We can work around the edges of this problem with various federated solutions like fedimint or Liquid but in order to scale self-sovereign bitcoin access to the masses of humanity we will need better tools for shared UTXO ownership. Those tools are broadly categorized as covenants.&lt;/li&gt;
  &lt;li&gt;“So how do we scale ownership? Simply put, the answer today is custody, whether that is pure custodial like a Wallet of Satoshi or in the grey area like fedimints and liquid, the only way to do it today is through custody or federated bridges. In bitcoin, the only way to delegate ownership of a utxo to multiple parties is through multisig, however, that requires every user to be online when anyone wants to transact, and when you take go down this path far enough you end up just reinventing lightning.”&lt;/li&gt;
  &lt;li&gt;“Are we doomed then? Is there no way to scale bitcoin in a self-sovereign way? Luckily, the answer is no, but we need some soft-forks. Covenants are the way to scale bitcoin ownership. There are a bunch of covenant proposals but at their core what they propose to do is to add a way, so you can have a bitcoin address that limits where and how the coins in it can be spent. This can seem scary, but we already have these in bitcoin today, OP_CTLV (Check LockTime Verify), which was soft forked in 2016, only allows you to spend from a bitcoin address if the transaction has a given locktime, this lets you gate when a utxo can be spent. What the current covenant proposals do is let you gate where a utxo can be spent. With that simple primitive many different protocols can be built that allow for scaling ownership.”&lt;/li&gt;
  &lt;li&gt;Covenants are a category of proposed changes to Bitcoin’s consensus rules that would allow a script to prevent an authorized spender from spending to certain other scripts. For example, a covenant may normally only allow spending to a whitelisted set of scripts, such as returning bitcoins to the user’s own balance or spending to a staging address that only allows spending to any arbitrary address after a period of time.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;inscriptions&quot;&gt;Inscriptions&lt;/h1&gt;

&lt;h4 id=&quot;precursive-inscriptions-a-bitcoin-native-private-publishing-mechanism&quot;&gt;Precursive Inscriptions: A Bitcoin-native Private Publishing Mechanism&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Another &lt;a href=&quot;https://www.ord.io/54024385&quot;&gt;inscription whitepaper drop&lt;/a&gt; describing a &lt;a href=&quot;https://github.com/4de67a207019fd4d855ef0a188b4519c/Precursive-Inscriptions/blob/main/Precursive%20Inscriptions%20-%20A%20Bitcoin-native%20Private%20Publishing%20Mechanism.pdf&quot;&gt;novel technique&lt;/a&gt; to upload encrypted files to the bitcoin blockchain using recursive inscriptions. The file can be broken up into multiple chunks spread across multiple bitcoin blocks and decrypted once the corresponding private key is revealed in a later transaction. This technique can be used in combination with a timelock to create a dead man’s switch.&lt;/li&gt;
  &lt;li&gt;Precursive inscriptions aim to create the private, encrypted publishing of data spread out over multiple Bitcoin blocks that can be published at a whim via a recursive publishing transaction containing the private key to decrypt the previously inscribed data. For instance, a collective of whistleblowers could discreetly upload data to the Bitcoin blockchain, unbeknownst to miners or node runners, while deferring its publication until a preferred moment. This very mechanism could implement a time-locked bitcoin transaction for this publishing transaction, acting as a dead man’s switch.&lt;/li&gt;
  &lt;li&gt;The primary objective of this proposal is to enhance the security and privacy of data stored on the Bitcoin blockchain, while also mitigating the risk of premature disclosure. One of the most significant advantages of this approach is its ability to ensure that the content remains concealed until the user decides to reveal it. This process not only provides data security but also maintains data integrity and permanence within the Bitcoin blockchain. Furthermore, the time-lock feature of the publishing transaction effectively creates a “dead man’s switch”. This feature is particularly valuable for scenarios where data must remain confidential until specific conditions are met or in situations where data must be automatically released in the absence of user intervention. The precursive inscription process offers a robust solution to the challenges associated with data publishing on the Bitcoin blockchain, enhancing data security, privacy, and censorship resistance, while also providing users with the flexibility to control when and how their data is revealed.
    &lt;h4 id=&quot;quantum-cats&quot;&gt;Quantum Cats&lt;/h4&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In a totally unrelated development &lt;a href=&quot;https://twitter.com/rot13maxi/status/1745983083608789345&quot;&gt;some other guy&lt;/a&gt; details the technical design enabling a collection of evolving inscriptions called Quantum Cats.&lt;/p&gt;

&lt;h1 id=&quot;statistics&quot;&gt;Statistics&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/jratcliff/status/1741897232692158480&quot;&gt;53M inscriptions stored in the Bitcoin blockchain in 2023 (5,327BTC in fees)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/mononautical/status/1734999756789739949&quot;&gt;Ordinal-style PSBT trades consuming blockspace&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/mononautical/status/1741161690836684986&quot;&gt;ARC20 “QUARK” token&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/mononautical/status/1744422005028368778&quot;&gt;hgp rune token flooding mempool&lt;/a&gt;
    &lt;h1 id=&quot;miscellaneous&quot;&gt;Miscellaneous&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fedimint/fedimint/releases/tag/v0.2.1&quot;&gt;Fedimint v0.2.1&lt;/a&gt; released. This is the first release that will have long term support.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/mononautical/status/1743391496827473925&quot;&gt;Someone sent ~27 BTC to Satoshi’s first pubkey&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.quantumcats.xyz/bip-land&quot;&gt;BIP Land&lt;/a&gt; is a flippant examination of the process of getting a bitcoin consensus change activated on the network.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393/1&quot;&gt;Overview of Cluster Mempool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/braidpool/braidpool/blob/main/docs/braidpool_spec.md&quot;&gt;Braidpool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://covenants.info/&quot;&gt;covenants.info&lt;/a&gt; cool site comparing the many covenant proposals. There seem to be some &lt;a href=&quot;https://twitter.com/Polyd_/status/1746575634170613824&quot;&gt;open&lt;/a&gt; &lt;a href=&quot;https://twitter.com/brian_trollz/status/1746573443393273950&quot;&gt;questions&lt;/a&gt; about the veracity of the information contained therein.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bitcointalk.org/index.php?topic=2162.0&quot;&gt;Bitcointalk thread&lt;/a&gt; discussing the introduction of ‘standardness’ rules and the (de)merits of storing data on the blockchain
    &lt;h3 id=&quot;aqua-wallet---lightning---liquid-wallet-aqua-wallet&quot;&gt;Aqua Wallet - Lightning - Liquid Wallet. Aqua Wallet,&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;developed by Jan3, is a non-custodial mobile Bitcoin, Lightning, Liquid and Tether USDT (on Liquid, Ethereum, and Tron) wallet. Available on Android (APK only for now) and iOS. &lt;a href=&quot;https://aquawallet.io/&quot;&gt;Website&lt;/a&gt;&lt;a href=&quot;https://twitter.com/JAN3com/status/1742758563271881132&quot;&gt;Announcement&lt;/a&gt; &lt;a href=&quot;https://jan3.com/blog/surf-the-bitcoin-revolution-with-aqua/&quot;&gt;Blogpost&lt;/a&gt;
        &lt;h3 id=&quot;primal-nostr-client-offers-lightning-wallet-with-apple-pay-top-ups&quot;&gt;Primal Nostr client offers Lightning Wallet with Apple Pay Top ups&lt;/h3&gt;
      &lt;/li&gt;
      &lt;li&gt;Primal is a Nostr client that works on Web, iOS, Android. Great explore feature. Offers a Zap-enabled lightning wallet which can hold up to 1.5million satoshis with a US$15/day buy limit. Apple Pay charges an additional fee to buy Bitcoin in this way.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Join our Telegram Group:</summary></entry></feed>