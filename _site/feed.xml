<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2024-01-29T14:20:14+08:00</updated><id>/feed.xml</id><title type="html">Bitdevs SG</title><subtitle>BitDevs is a community1 for those interested in discussing and participating in the research and development of Bitcoin and related protocols.</subtitle><entry><title type="html">Socratic Seminar 1</title><link href="/2024-01-29-socratic-seminar-1.html" rel="alternate" type="text/html" title="Socratic Seminar 1" /><published>2024-01-29T00:00:00+08:00</published><updated>2024-01-29T00:00:00+08:00</updated><id>/socratic-seminar-1</id><content type="html" xml:base="/2024-01-29-socratic-seminar-1.html">&lt;p&gt;Join our Telegram Group:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://i.ibb.co/2d4ncjx/Telegram-QR.png&quot;&gt;TelegramQR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will start with introductions, some basic ground rules, and jump into technical discussions. We will cover aspects of the bitcoin protocol, new research developments, recent news, and software developments.&lt;/p&gt;
&lt;h1 id=&quot;announcements&quot;&gt;Announcements&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;No pictures or recordings&lt;/li&gt;
  &lt;li&gt;Thank you &lt;a href=&quot;https://www.ogbc.com/&quot;&gt;OGBC&lt;/a&gt; for sponsorship of the event space&lt;/li&gt;
  &lt;li&gt;Introductions
    &lt;h1 id=&quot;agenda&quot;&gt;Agenda&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;[[Lightning Network (from Bitcoin University)]] - Darius&lt;/li&gt;
  &lt;li&gt;Taproot Assets Protocol - Luke&lt;/li&gt;
  &lt;li&gt;Bitcoin News&lt;/li&gt;
  &lt;li&gt;Opening Address - BitDevs NYC Founder&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;bitcoin&quot;&gt;Bitcoin&lt;/h1&gt;
&lt;h4 id=&quot;scaling-lightning-safely-with-feerate-dependent-timelocks&quot;&gt;&lt;a href=&quot;https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022191.html&quot;&gt;Scaling Lightning Safely With Feerate-Dependent Timelocks&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;All known Lightning channel and factory protocols are susceptible to forced expiration spam attacks, in which an attacker floods the blockchain with transactions in order to prevent honest users from putting their transactions onchain before timelocks expire.&lt;/li&gt;
  &lt;li&gt;Feerate-Dependent Timelocks (FDTs) are timelocks that automatically extend when blockchain feerates spike.
    &lt;ul&gt;
      &lt;li&gt;In the normal case, there’s no spike in feerates and thus no tradeoff between capital efficiency and safety.&lt;/li&gt;
      &lt;li&gt;If a dishonest user attempts a forced expiration spam attack, feerates increase and FDTs are extended, thus penalizing the attacker by keeping their capital timelocked for longer.&lt;/li&gt;
      &lt;li&gt;FDTs are tunable and can be made to be highly resistant to attacks from dishonest miners.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Of separate interest, an exact analysis of the risk of double spend attacks is presented that corrects an error in the original Bitcoin whitepaper.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;addressing-the-possibility-of-profitable-fee-manipulation-attacks&quot;&gt;&lt;a href=&quot;https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022195.html&quot;&gt;Addressing the possibility of profitable fee manipulation attacks&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;The article considers “the possibility that such patterns could be indicative of ongoing fee manipulation by either a large miner or a consortium of miners, and whether such manipulation could be practically profitable, even with a minority hashrate.  While miners have always had the ability to pad their own blocks with junk transactions, it seems to be generally assumed that at the very least there would be an opportunity cost of doing so, and that it would therefore would be unprofitable.”&lt;/li&gt;
  &lt;li&gt;“during periods of low mempool influx like early mornings on weekends, there tends to be large bursts (often several hundred kvB worth) of tiny ordinals/BRC-20 transactions with a single dust UTXO broadcast right after each block is found, with a fee set moderately higher than the current average of the top of the mempool, which makes it highly likely that this is done by a single actor.”&lt;/li&gt;
  &lt;li&gt;“Simply put, and trivially, such an attack would be profitable if the net fees the participating miners spend on fee-stuffing transactions is less than the increase in fees the participating miners can collect from “real” transactions.”&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;lightning&quot;&gt;Lightning&lt;/h1&gt;

&lt;h4 id=&quot;rethinking-lightning&quot;&gt;Rethinking Lightning&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://stacker.news/benthecarman&quot;&gt;Ben Carman&lt;/a&gt; wrote a thorough and realistic &lt;a href=&quot;https://stacker.news/items/379225&quot;&gt;stacker news post&lt;/a&gt; examining the shortcomings of the lightning network.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Two key problems: offline receiving and channel liquidity&lt;/li&gt;
  &lt;li&gt;**Channel liquidity: **when a payment is being made in lightning you are creating pre-signed transactions that have outputs for every in-flight payment, these outputs cost potential on-chain fees and the high on-chain fees go the more it eats into your liquidity.&lt;/li&gt;
  &lt;li&gt;Carman explains that the fundamental scaling problem with lightning is that it only scales payments but not UTXO ownership. We can work around the edges of this problem with various federated solutions like fedimint or Liquid but in order to scale self-sovereign bitcoin access to the masses of humanity we will need better tools for shared UTXO ownership. Those tools are broadly categorized as covenants.&lt;/li&gt;
  &lt;li&gt;“So how do we scale ownership? Simply put, the answer today is custody, whether that is pure custodial like a Wallet of Satoshi or in the grey area like fedimints and liquid, the only way to do it today is through custody or federated bridges. In bitcoin, the only way to delegate ownership of a utxo to multiple parties is through multisig, however, that requires every user to be online when anyone wants to transact, and when you take go down this path far enough you end up just reinventing lightning.”&lt;/li&gt;
  &lt;li&gt;“Are we doomed then? Is there no way to scale bitcoin in a self-sovereign way? Luckily, the answer is no, but we need some soft-forks. Covenants are the way to scale bitcoin ownership. There are a bunch of covenant proposals but at their core what they propose to do is to add a way, so you can have a bitcoin address that limits where and how the coins in it can be spent. This can seem scary, but we already have these in bitcoin today, OP_CTLV (Check LockTime Verify), which was soft forked in 2016, only allows you to spend from a bitcoin address if the transaction has a given locktime, this lets you gate when a utxo can be spent. What the current covenant proposals do is let you gate where a utxo can be spent. With that simple primitive many different protocols can be built that allow for scaling ownership.”&lt;/li&gt;
  &lt;li&gt;Covenants are a category of proposed changes to Bitcoin’s consensus rules that would allow a script to prevent an authorized spender from spending to certain other scripts. For example, a covenant may normally only allow spending to a whitelisted set of scripts, such as returning bitcoins to the user’s own balance or spending to a staging address that only allows spending to any arbitrary address after a period of time.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;inscriptions&quot;&gt;Inscriptions&lt;/h1&gt;

&lt;h4 id=&quot;precursive-inscriptions-a-bitcoin-native-private-publishing-mechanism&quot;&gt;Precursive Inscriptions: A Bitcoin-native Private Publishing Mechanism&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Another &lt;a href=&quot;https://www.ord.io/54024385&quot;&gt;inscription whitepaper drop&lt;/a&gt; describing a &lt;a href=&quot;https://github.com/4de67a207019fd4d855ef0a188b4519c/Precursive-Inscriptions/blob/main/Precursive%20Inscriptions%20-%20A%20Bitcoin-native%20Private%20Publishing%20Mechanism.pdf&quot;&gt;novel technique&lt;/a&gt; to upload encrypted files to the bitcoin blockchain using recursive inscriptions. The file can be broken up into multiple chunks spread across multiple bitcoin blocks and decrypted once the corresponding private key is revealed in a later transaction. This technique can be used in combination with a timelock to create a dead man’s switch.&lt;/li&gt;
  &lt;li&gt;Precursive inscriptions aim to create the private, encrypted publishing of data spread out over multiple Bitcoin blocks that can be published at a whim via a recursive publishing transaction containing the private key to decrypt the previously inscribed data. For instance, a collective of whistleblowers could discreetly upload data to the Bitcoin blockchain, unbeknownst to miners or node runners, while deferring its publication until a preferred moment. This very mechanism could implement a time-locked bitcoin transaction for this publishing transaction, acting as a dead man’s switch.&lt;/li&gt;
  &lt;li&gt;The primary objective of this proposal is to enhance the security and privacy of data stored on the Bitcoin blockchain, while also mitigating the risk of premature disclosure. One of the most significant advantages of this approach is its ability to ensure that the content remains concealed until the user decides to reveal it. This process not only provides data security but also maintains data integrity and permanence within the Bitcoin blockchain. Furthermore, the time-lock feature of the publishing transaction effectively creates a “dead man’s switch”. This feature is particularly valuable for scenarios where data must remain confidential until specific conditions are met or in situations where data must be automatically released in the absence of user intervention. The precursive inscription process offers a robust solution to the challenges associated with data publishing on the Bitcoin blockchain, enhancing data security, privacy, and censorship resistance, while also providing users with the flexibility to control when and how their data is revealed.
    &lt;h4 id=&quot;quantum-cats&quot;&gt;Quantum Cats&lt;/h4&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In a totally unrelated development &lt;a href=&quot;https://twitter.com/rot13maxi/status/1745983083608789345&quot;&gt;some other guy&lt;/a&gt; details the technical design enabling a collection of evolving inscriptions called Quantum Cats.&lt;/p&gt;

&lt;h1 id=&quot;statistics&quot;&gt;Statistics&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/jratcliff/status/1741897232692158480&quot;&gt;53M inscriptions stored in the Bitcoin blockchain in 2023 (5,327BTC in fees)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/mononautical/status/1734999756789739949&quot;&gt;Ordinal-style PSBT trades consuming blockspace&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/mononautical/status/1741161690836684986&quot;&gt;ARC20 “QUARK” token&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/mononautical/status/1744422005028368778&quot;&gt;hgp rune token flooding mempool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;miscellaneous&quot;&gt;Miscellaneous&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fedimint/fedimint/releases/tag/v0.2.1&quot;&gt;Fedimint v0.2.1&lt;/a&gt; released. This is the first release that will have long term support.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/mononautical/status/1743391496827473925&quot;&gt;Someone sent ~27 BTC to Satoshi’s first pubkey&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.quantumcats.xyz/bip-land&quot;&gt;BIP Land&lt;/a&gt; is a flippant examination of the process of getting a bitcoin consensus change activated on the network.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393/1&quot;&gt;Overview of Cluster Mempool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/braidpool/braidpool/blob/main/docs/braidpool_spec.md&quot;&gt;Braidpool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://covenants.info/&quot;&gt;covenants.info&lt;/a&gt; cool site comparing the many covenant proposals. There seem to be some &lt;a href=&quot;https://twitter.com/Polyd_/status/1746575634170613824&quot;&gt;open&lt;/a&gt; &lt;a href=&quot;https://twitter.com/brian_trollz/status/1746573443393273950&quot;&gt;questions&lt;/a&gt; about the veracity of the information contained therein.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bitcointalk.org/index.php?topic=2162.0&quot;&gt;Bitcointalk thread&lt;/a&gt; discussing the introduction of ‘standardness’ rules and the (de)merits of storing data on the blockchain&lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;aqua-wallet---lightning---liquid-wallet-aqua-wallet&quot;&gt;Aqua Wallet - Lightning - Liquid Wallet. Aqua Wallet,&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;developed by Jan3, is a non-custodial mobile Bitcoin, Lightning, Liquid and Tether USDT (on Liquid, Ethereum, and Tron) wallet. Available on Android (APK only for now) and iOS. &lt;a href=&quot;https://aquawallet.io/&quot;&gt;Website&lt;/a&gt;&lt;a href=&quot;https://twitter.com/JAN3com/status/1742758563271881132&quot;&gt;Announcement&lt;/a&gt; &lt;a href=&quot;https://jan3.com/blog/surf-the-bitcoin-revolution-with-aqua/&quot;&gt;Blogpost&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;primal-nostr-client-offers-lightning-wallet-with-apple-pay-top-ups&quot;&gt;Primal Nostr client offers Lightning Wallet with Apple Pay Top ups&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;Primal is a Nostr client that works on Web, iOS, Android. Great explore feature. Offers a Zap-enabled lightning wallet which can hold up to 1.5million satoshis with a US$15/day buy limit. Apple Pay charges an additional fee to buy Bitcoin in this way.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Join our Telegram Group:</summary></entry><entry><title type="html">Lightning Network (from Bitcoin University)</title><link href="/2024-01-28-Lightning-Network-(from-Bitcoin-University).html" rel="alternate" type="text/html" title="Lightning Network (from Bitcoin University)" /><published>2024-01-28T00:00:00+08:00</published><updated>2024-01-28T00:00:00+08:00</updated><id>/Lightning%20Network%20(from%20Bitcoin%20University)</id><content type="html" xml:base="/2024-01-28-Lightning-Network-(from-Bitcoin-University).html">&lt;p&gt;Lightning Network is a scaling solution that attempts to address Bitcoin’s slow transaction speeds and high transaction costs.&lt;/p&gt;

&lt;p&gt;LN: very fast, very low fees&lt;/p&gt;

&lt;p&gt;The native money of the LN is BTC or SATS (1 BTC = 100M SATS)&lt;/p&gt;

&lt;p&gt;LN is not controlled by any private company nor its development company - Lightning Labs&lt;/p&gt;

&lt;p&gt;LN is an open, permissionless protocol that allows anyone to build on it or send or receive money using it&lt;/p&gt;

&lt;p&gt;&lt;u&gt;At the start&lt;/u&gt;
Christina 100,000 sats =========== Bob 50,000 sats&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Christina sends Bob 10,000 sats&lt;/u&gt;
Christina 90,000 sats =========== Bob 60,000 sats&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Christina receives from Bob 20,000 sats&lt;/u&gt;
Christina 110,000 sats =========== Bob 40,000 sats&lt;/p&gt;

&lt;p&gt;To open up a Lightning channel, you and someone else make a 2/2 multi-sig transaction (using the Bitcoin network) that locks up BTC on-chain and then funds that channel with that BTC.&lt;/p&gt;

&lt;p&gt;Whatever BTC you add, ends up on your side of the payment channel. Whatever BTC the other person adds, ends up on their side of the payment channel.&lt;/p&gt;

&lt;p&gt;No additional BTC is created in the process, so there is no additional monetary inflation.&lt;/p&gt;

&lt;p&gt;You can then send money back and forth in that Lightning channel&lt;/p&gt;

&lt;p&gt;The LN is made up of 1000s of these two party payment channels.&lt;/p&gt;

&lt;p&gt;Christina ===== Bob
Bob ===== John
Christina ===== Bob ===== John&lt;/p&gt;

&lt;p&gt;At some point, Christina and Bob may choose to “settle up” by closing their channel by doing a transaction on the Bitcoin base layer. At that point, each person will get the sats that were on their side of the channel&lt;/p&gt;

&lt;p&gt;Either person can close the channel whenever they want and claim the sats that rightly belong to them&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://freeimage.host/i/JcNFgKN&quot;&gt;&lt;img src=&quot;https://iili.io/JcNFgKN.md.png&quot; alt=&quot;JcNFgKN.md.png&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://freeimage.host/i/JcNF4St&quot;&gt;&lt;img src=&quot;https://iili.io/JcNF4St.md.png&quot; alt=&quot;JcNF4St.md.png&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://freeimage.host/i/JcNFrlI&quot;&gt;&lt;img src=&quot;https://iili.io/JcNFrlI.md.png&quot; alt=&quot;JcNFrlI.md.png&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://freeimage.host/i/JcNFvov&quot;&gt;&lt;img src=&quot;https://iili.io/JcNFvov.md.png&quot; alt=&quot;JcNFvov.md.png&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://freeimage.host/i/JcNFeDJ&quot;&gt;&lt;img src=&quot;https://iili.io/JcNFeDJ.md.png&quot; alt=&quot;JcNFeDJ.md.png&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://freeimage.host/i/JcNFONa&quot;&gt;&lt;img src=&quot;https://iili.io/JcNFONa.md.png&quot; alt=&quot;JcNFONa.md.png&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://freeimage.host/i/JcNF8VR&quot;&gt;&lt;img src=&quot;https://iili.io/JcNF8VR.md.png&quot; alt=&quot;JcNF8VR.md.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mempool.space/lightning&quot;&gt;Lightning Network Map&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LN transactions are NOT broadcast to the entire network, unlike the Bitcoin network.&lt;/p&gt;

&lt;p&gt;As a result, no one really knows how many transactions were actually taking place on the LN.&lt;/p&gt;

&lt;p&gt;The only channels mapped here are channels that have publicly announced themselves and that are connected to nodes that are connected to mempool.space’s Lightning node.&lt;/p&gt;

&lt;p&gt;So there may be many payment channels that we don’t know of.&lt;/p&gt;

&lt;p&gt;Payment volume may also be much higher than we think.&lt;/p&gt;

&lt;p&gt;Node A and Node B may also be much higher than we think.&lt;/p&gt;

&lt;p&gt;Node A and Node B could be sending millions of dollars of Bitcoin back and forth to each other every month and we would never know&lt;/p&gt;

&lt;p&gt;Also, Bitcoin’s Taproot upgrade ensures that Lightning channel openings and closings look like regular simple spends on-chain.&lt;/p&gt;

&lt;p&gt;This contributes to greater privacy.&lt;/p&gt;

&lt;h1 id=&quot;problem-with-lightning-channels&quot;&gt;Problem with Lightning channels&lt;/h1&gt;

&lt;p&gt;There is a lot of rebalancing involved with running a channel.&lt;/p&gt;

&lt;p&gt;Let’s say that I have a Lightning channel open with my local grocery store (an illustrative example):
I’m usually the one spending the money and sending it to the groccery store when I buy food and I rarely need refunds, so most of the money is flowing one-way. And, most of the money in the channel ends up on their side.&lt;/p&gt;

&lt;p&gt;If I want to add more money on my side of the channel, I could try to send more sats to myself if those sats are already on the LN.&lt;/p&gt;

&lt;p&gt;But if they are not already on LN – The grocery store and I will need to agree to close our Lightning channel, wait for me to add more sats from on-chain, and then reopen the channel.&lt;/p&gt;

&lt;p&gt;That requires two on-chain transactions (closing and then reopening the channel – which can get expensive when Bitcoin transaction fees are high)&lt;/p&gt;

&lt;p&gt;And it also means that our channel is down for an hour (6 confirmations) or likely more.&lt;/p&gt;

&lt;p&gt;Here’s another problem that needs to be solved:&lt;/p&gt;

&lt;p&gt;Unified wallets (Muun, Phoenix, Alby) which allow you transact both on-chain and on LN, while showing you a single total Bitcoin balance&lt;/p&gt;

&lt;p&gt;How are these unified wallets supposed to swap back and forth between on-chain BTC and BTC that’s held on the LN.&lt;/p&gt;

&lt;p&gt;Alby and Muun solves this problem by holding your BTC onchain then doing a submarine swap when you need to send via LN.&lt;/p&gt;

&lt;p&gt;Muun’s model breaks down in a high transaction fee environment as we have seen in the past 12 months.&lt;/p&gt;

&lt;p&gt;Phoenix utilises splicing, a new technology.&lt;/p&gt;

&lt;p&gt;Splicing = the ability to easily add or remove sats from a Lightning channel without having to close and then reopen the channel.&lt;/p&gt;

&lt;p&gt;Closing and reopening the channel would require 2 on-chain transaction fees, which can be problematic in a high fee environment.&lt;/p&gt;

&lt;p&gt;“Splice in” = add funds to a Lightning channel
“Splice out” = remove funds from a Lightning channel&lt;/p&gt;

&lt;p&gt;Splicing makes it much easier to design Bitcoin wallets that can easily send and receive and hold Bitcoin both on-chain and via the LN.&lt;/p&gt;

&lt;p&gt;Splicing makes Bitcoin on-chain and Bitcoin on LN more fungible.&lt;/p&gt;

&lt;p&gt;That is a huge innovation. For example, you can make an on-chain payment using BTC that is held on the LN and vice versa.&lt;/p&gt;

&lt;p&gt;We will do deep dive into the tech of Splicing in the future.&lt;/p&gt;</content><author><name></name></author><summary type="html">Lightning Network is a scaling solution that attempts to address Bitcoin’s slow transaction speeds and high transaction costs.</summary></entry></feed>